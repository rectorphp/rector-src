# builds the content of https://github.com/rectorphp/rector-prefixed
# inspiration from https://github.com/phpstan/phpstan-src/blob/master/.github/workflows/phar.yml
name: Packages Tests

on:
    pull_request: null
    push:
        branches:
            - main

env:
    # see https://github.com/composer/composer/issues/9368#issuecomment-718112361
    COMPOSER_ROOT_VERSION: "dev-main"

jobs:
    packages_tests:
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                repository_name:
                    # must be repository name, e.g. https://github.com/rectorphp/rector-symfony
                    - rectorphp/rector-symfony
                    - rectorphp/rector-phpunit
                    - rectorphp/rector-doctrine
                    - rectorphp/rector-downgrade-php
                    - rectorphp/rector-php-parser
                actions:
                    -
                        name: 'Unit Tests'
                        run: vendor/bin/phpunit
                    -
                        name: 'PHPStan'
                        run: vendor/bin/phpstan

        steps:
            # see https://github.com/actions/checkout#usage
            -
                uses: "actions/checkout@v3"
                with:
                    repository: ${{ matrix.repository_name }}
                    ref: "main"

            -
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.1
                    coverage: none

            -   run: composer config minimum-stability dev

            # tweak while wait for rector/phpstan-rules release
            -   run: composer require --dev rector/phpstan-rules:dev-main --no-update

            # test with current commit in a pull-request
            -
                run: composer require rector/rector-src dev-main#${{github.event.pull_request.head.sha}} --no-update
                if: ${{ github.event_name == 'pull_request' }}

            -   run: composer install --ansi

            -   run: ${{ matrix.actions.run }}
