<?php

namespace Rector\Tests\CodeQuality\Rector\Identical\FlipTypeControlToUseExclusiveTypeRector\Fixture;

use stdClass;

final class FlipInstanceNullableType
{
    public function run()
    {
        $stdClass = $this->getStdClass();
        if ($stdClass === null) {
            return;
        }
    }

    private function getStdClass(): ?stdClass
    {
        if (rand(0, 1)) {
            return new stdClass;
        }

        return null;
    }
}

?>
-----
<?php

namespace Rector\Tests\CodeQuality\Rector\Identical\FlipTypeControlToUseExclusiveTypeRector\Fixture;

use stdClass;

final class FlipInstanceNullableType
{
    public function run()
    {
        $stdClass = $this->getStdClass();
        if (!$stdClass instanceof \stdClass) {
            return;
        }
    }

    private function getStdClass(): ?stdClass
    {
        if (rand(0, 1)) {
            return new stdClass;
        }

        return null;
    }
}

?>
